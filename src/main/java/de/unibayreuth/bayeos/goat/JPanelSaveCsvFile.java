/*******************************************************************************
 * Copyright (c) 2011 University of Bayreuth - BayCEER.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * 
 * Contributors:
 *     University of Bayreuth - BayCEER - initial API and implementation
 ******************************************************************************/
/*
 * JPanelSelectFile.java
 *
 * Created on 16. April 2003, 13:52
 */

package de.unibayreuth.bayeos.goat;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JTextField;

import de.unibayreuth.bayeos.utils.DefaultFileFilter;
import de.unibayreuth.bayeos.utils.MsgBox;

/**
 *
 * @author  oliver
 */
public class JPanelSaveCsvFile extends javax.swing.JPanel {
    
    private JFileChooser myFileChooser;
        
    /** Creates new form JPanelSelectFile */
    public JPanelSaveCsvFile() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupSeperator = new javax.swing.ButtonGroup();
        pathPanel = new javax.swing.JPanel();
        txtFieldPath = new javax.swing.JTextField();
        FileDialog = new javax.swing.JButton();
        lblPath = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        pathPanel.setLayout(new java.awt.GridBagLayout());

        pathPanel.setBorder(new javax.swing.border.TitledBorder("File Destination"));
        pathPanel.setMinimumSize(new java.awt.Dimension(350, 100));
        pathPanel.setPreferredSize(new java.awt.Dimension(350, 100));
        txtFieldPath.setMinimumSize(new java.awt.Dimension(100, 20));
        txtFieldPath.setPreferredSize(new java.awt.Dimension(275, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.5;
        pathPanel.add(txtFieldPath, gridBagConstraints);

        FileDialog.setText("...");
        FileDialog.setMaximumSize(new java.awt.Dimension(43, 20));
        FileDialog.setMinimumSize(new java.awt.Dimension(43, 20));
        FileDialog.setPreferredSize(new java.awt.Dimension(43, 20));
        FileDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileDialogActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        pathPanel.add(FileDialog, gridBagConstraints);

        lblPath.setText("Path:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        pathPanel.add(lblPath, gridBagConstraints);

        add(pathPanel);

    }//GEN-END:initComponents

    private void FileDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileDialogActionPerformed
        // Add your handling code here:
        if (myFileChooser == null) myFileChooser = new JFileChooser();
            myFileChooser.setFileFilter(new DefaultFileFilter("csv","Comma separated format"));
            int returnVal = myFileChooser.showSaveDialog(JPanelSaveCsvFile.this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
              File inputFile = myFileChooser.getSelectedFile();
              txtFieldPath.setText(inputFile.getAbsolutePath());
            } 

    }//GEN-LAST:event_FileDialogActionPerformed

    public boolean validateInputs() {
        if (txtFieldPath.getText().equals("")) {
            MsgBox.info(this,"Please specify an output file!");
            return false;
        }
        return true;
    }
    
    /** Getter for property txtFieldPath.
     * @return Value of property txtFieldPath.
     *
     */
    public String getFilePath() {
        return txtFieldPath.getText();
    }   
    
    public void setFilePath(String path){
        txtFieldPath.setText(path);
    }
    
    
    public JTextField getTxtField(){
        return txtFieldPath;
    }
    
    
   
    
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FileDialog;
    private javax.swing.ButtonGroup buttonGroupSeperator;
    private javax.swing.JLabel lblPath;
    private javax.swing.JPanel pathPanel;
    private javax.swing.JTextField txtFieldPath;
    // End of variables declaration//GEN-END:variables
    
}
