/*******************************************************************************
 * Copyright (c) 2011 University of Bayreuth - BayCEER.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * 
 * Contributors:
 *     University of Bayreuth - BayCEER - initial API and implementation
 ******************************************************************************/
/*
 * JTreeFilter.java
 *
 * Created on 19. Juli 2004, 17:01
 */

package de.unibayreuth.bayeos.goat.filter;

import java.awt.GridBagConstraints;
import java.util.prefs.Preferences;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import de.unibayreuth.bayceer.bayeos.xmlrpc.filter.TimeFilter;
import de.unibayreuth.bayeos.goat.JMainFrame;

/**
 *
 * @author  oliver
 */
public class JTreeFilter extends javax.swing.JDialog {
    
    private boolean filterChanged;
    private JPanelVonBis jPanelVonBis;
    
    private static final Preferences pref = Preferences.userNodeForPackage(JMainFrame.class); 
    /** Creates new form JTreeFilter */
    public JTreeFilter(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jComboBoxMissing.setSelectedItem(pref.get("tree_missing_interval","Day"));
        jCheckBoxMissing.setSelected(pref.getBoolean("tree_missing_label", false));
        jCheckkBoxActiveFilter.setSelected(pref.getBoolean("tree_only_active", false));
        jCheckBoxTime.setSelected(pref.getBoolean("tree_time_filter",false));
        java.util.Date now = new java.util.Date();
        java.util.Date start = new java.util.Date(pref.getLong("tree_time_filter_start",now.getTime()));
        java.util.Date end = new java.util.Date(pref.getLong("tree_time_filter_end",now.getTime()));
        jPanelVonBis = new JPanelVonBis(new TimeFilter(start,end));
        
        jPanelVonBis.getJSpinnerStart().addChangeListener(new ChangeListener(){
          public void stateChanged(ChangeEvent e){
              pref.putLong("tree_time_filter_start", jPanelVonBis.getFilter().getVon().getTime());
              filterChanged = true;
          }
        });
        
        jPanelVonBis.getJSpinnerEnd().addChangeListener(new ChangeListener(){
          public void stateChanged(ChangeEvent e){
              pref.putLong("tree_time_filter_end", jPanelVonBis.getFilter().getBis().getTime());
              filterChanged = true;
          }
        });
        
        GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelFilter.add(jPanelVonBis, gridBagConstraints);
        
        pack();
        
        setTitle("Set Tree Filter");
        setLocationRelativeTo(parent);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelFilter = new javax.swing.JPanel();
        jCheckkBoxActiveFilter = new javax.swing.JCheckBox();
        jCheckBoxMissing = new javax.swing.JCheckBox();
        jComboBoxMissing = new javax.swing.JComboBox();
        jCheckBoxTime = new javax.swing.JCheckBox();
        jPanelOk = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Set Tree Filter");
        jPanelFilter.setLayout(new java.awt.GridBagLayout());

        jPanelFilter.setPreferredSize(new java.awt.Dimension(400, 180));
        jPanelFilter.setRequestFocusEnabled(false);
        jCheckkBoxActiveFilter.setText("Hide inactive nodes");
        jCheckkBoxActiveFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckkBoxActiveFilterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelFilter.add(jCheckkBoxActiveFilter, gridBagConstraints);

        jCheckBoxMissing.setText("Highlight active nodes with missing records since last");
        jCheckBoxMissing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMissingActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelFilter.add(jCheckBoxMissing, gridBagConstraints);

        jComboBoxMissing.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year", "Month", "Week", "Day" }));
        jComboBoxMissing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMissingActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanelFilter.add(jComboBoxMissing, gridBagConstraints);

        jCheckBoxTime.setText("Nodes with records between");
        jCheckBoxTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTimeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelFilter.add(jCheckBoxTime, gridBagConstraints);

        getContentPane().add(jPanelFilter, java.awt.BorderLayout.CENTER);

        jPanelOk.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jPanelOk.add(jButtonOk);

        getContentPane().add(jPanelOk, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents

    private void jCheckBoxTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTimeActionPerformed
        // TODO add your handling code here:
        JCheckBox s = (JCheckBox)evt.getSource();
        pref.putBoolean("tree_time_filter",s.isSelected());
        filterChanged = true;
    }//GEN-LAST:event_jCheckBoxTimeActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        this.hide();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jComboBoxMissingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMissingActionPerformed
        JComboBox s = (JComboBox)evt.getSource();
        pref.put("tree_missing_interval",(String)s.getSelectedItem());
        filterChanged = true;
    }//GEN-LAST:event_jComboBoxMissingActionPerformed

    private void jCheckBoxMissingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMissingActionPerformed
        JCheckBox s = (JCheckBox)evt.getSource();
        pref.putBoolean("tree_missing_label",s.isSelected());
        filterChanged = true;
    }//GEN-LAST:event_jCheckBoxMissingActionPerformed

    private void jCheckkBoxActiveFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckkBoxActiveFilterActionPerformed
        JCheckBox s = (JCheckBox)evt.getSource();
        pref.putBoolean("tree_only_active",s.isSelected());        
        filterChanged = true;
    }//GEN-LAST:event_jCheckkBoxActiveFilterActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new JTreeFilter(new javax.swing.JFrame(), true).show();
    }
    
    /**
     * Getter for property hasChanged.
     * @return Value of property hasChanged.
     */
    public boolean isFilterChanged() {
        return filterChanged;
    }
    
    public void show() {
        filterChanged = false;
        super.show();
        
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxMissing;
    private javax.swing.JCheckBox jCheckBoxTime;
    private javax.swing.JCheckBox jCheckkBoxActiveFilter;
    private javax.swing.JComboBox jComboBoxMissing;
    private javax.swing.JPanel jPanelFilter;
    private javax.swing.JPanel jPanelOk;
    // End of variables declaration//GEN-END:variables
    
}
