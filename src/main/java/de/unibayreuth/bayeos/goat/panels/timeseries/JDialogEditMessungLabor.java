/*******************************************************************************
 * Copyright (c) 2011 University of Bayreuth - BayCEER.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * 
 * Contributors:
 *     University of Bayreuth - BayCEER - initial API and implementation
 ******************************************************************************/
/*
 * JDialogEditMassendaten.java
 *
 * Created on 25. Februar 2004, 09:47
 */

package de.unibayreuth.bayeos.goat.panels.timeseries;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;

import de.unibayreuth.bayceer.bayeos.xmlrpc.formats.DateFormat;
import de.unibayreuth.bayceer.bayeos.xmlrpc.formats.NumericFormat;
import de.unibayreuth.bayeos.goat.Constants;
import de.unibayreuth.bayeos.utils.JDateField;
import de.unibayreuth.bayeos.utils.LookUpTableFactory;
import de.unibayreuth.bayeos.utils.MsgBox;


/**
 *
 * @author  oliver
 */
public class JDialogEditMessungLabor extends javax.swing.JDialog implements Constants {
    
    private boolean okPressed = false;
    private JDateField jDateFieldVon;
    
    
    private Integer status;
    private java.util.Date von;
    private java.util.Date bis;
    private Double wert;
    private String lbnr; // 32
    private Double gen;
    private Double nachw; 
    private String bem; // 64
    
    
    private boolean many;
    
    private ArrayList idIndex = new ArrayList(10);
    
    
    /** Creates new form JDialogEditMassendaten */
    public JDialogEditMessungLabor() {
        setModal(true);
        initComponents();
        Iterator it = LookUpTableFactory.getStatus().iterator();
        while(it.hasNext()){
          Vector row = (Vector)it.next();
          idIndex.add(row.elementAt(0));
          jComboBoxStatus.addItem((String)row.elementAt(1));   
        }
        getRootPane().setDefaultButton(jButtonOk);
                       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelButtons = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOk = new javax.swing.JButton();
        jPanelFields = new javax.swing.JPanel();
        jLabelStatus = new javax.swing.JLabel();
        jLabelWert = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox();
        jTextFieldWert = new javax.swing.JTextField();
        jTextFieldVon = new javax.swing.JTextField();
        jLabelVon = new javax.swing.JLabel();
        jTextFieldBis = new javax.swing.JTextField();
        jLabelLbnr = new javax.swing.JLabel();
        jTextFieldGenau = new javax.swing.JTextField();
        jLabelBis = new javax.swing.JLabel();
        jTextFieldLbnr = new javax.swing.JTextField();
        jLabelGenau = new javax.swing.JLabel();
        jTextFieldNachw = new javax.swing.JTextField();
        jLabelNachw = new javax.swing.JLabel();
        jTextFieldBem = new javax.swing.JTextField();
        jLabelBem = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonCancel);

        jButtonOk.setText("Ok");
        jButtonOk.setContentAreaFilled(false);
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonOk);

        getContentPane().add(jPanelButtons, java.awt.BorderLayout.SOUTH);

        jPanelFields.setLayout(new java.awt.GridBagLayout());

        jPanelFields.setMinimumSize(new java.awt.Dimension(350, 219));
        jPanelFields.setPreferredSize(new java.awt.Dimension(350, 224));
        jLabelStatus.setText("Status:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelStatus, gridBagConstraints);

        jLabelWert.setText("Wert:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelWert, gridBagConstraints);

        jComboBoxStatus.setMinimumSize(new java.awt.Dimension(100, 19));
        jComboBoxStatus.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jComboBoxStatus, gridBagConstraints);

        jTextFieldWert.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldWert.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldWert, gridBagConstraints);

        jTextFieldVon.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldVon.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldVon, gridBagConstraints);

        jLabelVon.setText("Von:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelVon, gridBagConstraints);

        jTextFieldBis.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldBis.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldBis, gridBagConstraints);

        jLabelLbnr.setText("Labornummer:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelLbnr, gridBagConstraints);

        jTextFieldGenau.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldGenau.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldGenau, gridBagConstraints);

        jLabelBis.setText("Bis:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelBis, gridBagConstraints);

        jTextFieldLbnr.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldLbnr.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldLbnr, gridBagConstraints);

        jLabelGenau.setText("Genauigkeit:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelGenau, gridBagConstraints);

        jTextFieldNachw.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldNachw.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldNachw, gridBagConstraints);

        jLabelNachw.setText("Bestimmungsgrenze:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelNachw, gridBagConstraints);

        jTextFieldBem.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldBem.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 10);
        jPanelFields.add(jTextFieldBem, gridBagConstraints);

        jLabelBem.setText("Bemerkung:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 4, 0);
        jPanelFields.add(jLabelBem, gridBagConstraints);

        getContentPane().add(jPanelFields, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        okPressed = false;
        hide();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed

        if (okPressed = validateForm()) hide();
        
    }//GEN-LAST:event_jButtonOkActionPerformed
    
    public void initForm(){
        setStatus(new Integer(0));
        setVon(null);
        setBis(new java.util.Date());
        setWert(null);        
        setLbnr(null);
        setGen(null);
        setNachw(null);
        setBem(null);
        setOkPressed(false);
        setManyValues(false);        
    }
    
    public void setManyValues(boolean enabled){
        this.many = enabled;
        jTextFieldVon.setEnabled(!enabled);
        jTextFieldBis.setEnabled(!enabled);
        jTextFieldWert.setEnabled(!enabled);
        jTextFieldLbnr.setEnabled(!enabled);
        jTextFieldGenau.setEnabled(!enabled);
        jTextFieldNachw.setEnabled(!enabled);
        jTextFieldBem.setEnabled(!enabled);
        if (enabled) {
            jTextFieldVon.setText("<Different Values>");
            jTextFieldWert.setText("<Different Values>");
            jTextFieldBis.setText("<Different Values>");
            jTextFieldWert.setText("<Different Values>");
            jTextFieldLbnr.setText("<Different Values>");
            jTextFieldGenau.setText("<Different Values>");
            jTextFieldNachw.setText("<Different Values>");
            jTextFieldBem.setText("<Different Values>");
        }
    }
    
        
    private boolean validateForm(){
        try {
        if (!many){
            
            if (jTextFieldVon.getText().length() == 0){
                von = null;
            } else {
                von = DateFormat.defaultDateFormat.parse(jTextFieldVon.getText()); 
            }
            
            bis = DateFormat.defaultDateFormat.parse(jTextFieldBis.getText()); 
            
            if (jTextFieldWert.getText().length() == 0) {
                wert = null;
            } else {
                wert = new Double(jTextFieldWert.getText());
            }
            
            lbnr = jTextFieldLbnr.getText();
            
            if (jTextFieldGenau.getText().length() == 0) {
                gen = null;
            } else {
                gen = new Double(jTextFieldGenau.getText());
            }
            
            if (jTextFieldNachw.getText().length() == 0) {
                nachw = null;
            } else {
                nachw = new Double(jTextFieldNachw.getText());
            }
            
            bem = jTextFieldBem.getText();
            
        }
        
        status = (Integer)idIndex.get(jComboBoxStatus.getSelectedIndex());
        } catch (java.lang.Exception e) {
            MsgBox.error(e.getMessage());
            return false;
        }
        return true;
    }
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
      /**
     * Getter for property okPressed.
     * @return Value of property okPressed.
     */
    public boolean isOkPressed() {
        return okPressed;
    }    
    
    /**
     * Setter for property okPressed.
     * @param okPressed New value of property okPressed.
     */
    public void setOkPressed(boolean okPressed) {
        this.okPressed = okPressed;
    }
    
    public void setStatus(Integer status){
        jComboBoxStatus.setSelectedIndex(idIndex.indexOf(status));
        this.status = status ;
    }
    
    public Integer getStatus(){
        return status;
    }
    
    
    public void setVon(java.util.Date von){
        this.jTextFieldVon.setText((von==null)?"":DateFormat.defaultDateFormat.format(von));
        this.von = von;
 
    }
    public java.util.Date getVon(){
        return von;
    }
    
    /**
     * Getter for property bis.
     * @return Value of property bis.
     */
    public java.util.Date getBis() {
        return bis;
    }
    
    /**
     * Setter for property bis.
     * @param bis New value of property bis.
     */
    public void setBis(java.util.Date bis) {
        this.jTextFieldBis.setText((bis==null)?"":DateFormat.defaultDateFormat.format(bis));
        this.bis = bis;
        this.bis = bis;
    }
    
    
    
    public void setWert(Double value){        
        jTextFieldWert.setText((value==null)? "":NumericFormat.defaultDecimalFormat.format(value));
        this.wert = value;
    }
    
    public Double getWert(){
        return wert;
    }
    
    
    /**
     * Getter for property lbnr.
     * @return Value of property lbnr.
     */
    public java.lang.String getLbnr() {
        return lbnr;
    }
    
    /**
     * Setter for property lbnr.
     * @param lbnr New value of property lbnr.
     */
    public void setLbnr(java.lang.String lbnr) {
        jTextFieldLbnr.setText(lbnr);
        this.lbnr = lbnr;
    }
    
    /**
     * Getter for property gen.
     * @return Value of property gen.
     */
    public java.lang.Double getGen() {
        return gen;
    }
    
    /**
     * Setter for property gen.
     * @param gen New value of property gen.
     */
    public void setGen(java.lang.Double gen) {
        jTextFieldGenau.setText( (gen==null)? "":NumericFormat.defaultDecimalFormat.format(gen));
        this.gen = gen;
    }
    
    /**
     * Getter for property nachw.
     * @return Value of property nachw.
     */
    public java.lang.Double getNachw() {
        return nachw;
    }
    
    /**
     * Setter for property nachw.
     * @param nachw New value of property nachw.
     */
    public void setNachw(java.lang.Double nachw) {
        jTextFieldNachw.setText((nachw==null)?"": NumericFormat.defaultDecimalFormat.format(nachw) );
        this.nachw = nachw;
    }
    
    /**
     * Getter for property bem.
     * @return Value of property bem.
     */
    public java.lang.String getBem() {
        return bem;
    }
    
    /**
     * Setter for property bem.
     * @param bem New value of property bem.
     */
    public void setBem(java.lang.String bem) {
        jTextFieldBem.setText(bem);
        this.bem = bem;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JComboBox jComboBoxStatus;
    private javax.swing.JLabel jLabelBem;
    private javax.swing.JLabel jLabelBis;
    private javax.swing.JLabel jLabelGenau;
    private javax.swing.JLabel jLabelLbnr;
    private javax.swing.JLabel jLabelNachw;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelVon;
    private javax.swing.JLabel jLabelWert;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelFields;
    private javax.swing.JTextField jTextFieldBem;
    private javax.swing.JTextField jTextFieldBis;
    private javax.swing.JTextField jTextFieldGenau;
    private javax.swing.JTextField jTextFieldLbnr;
    private javax.swing.JTextField jTextFieldNachw;
    private javax.swing.JTextField jTextFieldVon;
    private javax.swing.JTextField jTextFieldWert;
    // End of variables declaration//GEN-END:variables
    
}
