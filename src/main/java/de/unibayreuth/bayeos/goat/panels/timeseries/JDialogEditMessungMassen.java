/*******************************************************************************
 * Copyright (c) 2011 University of Bayreuth - BayCEER.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * 
 * Contributors:
 *     University of Bayreuth - BayCEER - initial API and implementation
 ******************************************************************************/
/*
 * JDialogEditMassendaten.java
 *
 * Created on 25. Februar 2004, 09:47
 */

package de.unibayreuth.bayeos.goat.panels.timeseries;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;

import de.unibayreuth.bayceer.bayeos.xmlrpc.formats.DateFormat;
import de.unibayreuth.bayceer.bayeos.xmlrpc.formats.NumericFormat;
import de.unibayreuth.bayeos.goat.Constants;
import de.unibayreuth.bayeos.utils.JDateField;
import de.unibayreuth.bayeos.utils.LookUpTableFactory;
import de.unibayreuth.bayeos.utils.MsgBox;


/**
 *
 * @author  oliver
 */
public class JDialogEditMessungMassen extends javax.swing.JDialog implements Constants {
    
    private boolean okPressed = false;
    private JDateField jDateFieldVon;
    
    private Double wert;
    private Integer status;
    private java.util.Date von;
    
    private boolean many;
    
    private ArrayList idIndex = new ArrayList(10);
    
    
    /** Creates new form JDialogEditMassendaten */
    public JDialogEditMessungMassen() {
        setModal(true);
        initComponents();
        Iterator it = LookUpTableFactory.getStatus().iterator();
        while(it.hasNext()){
          Vector row = (Vector)it.next();
          idIndex.add(row.elementAt(0));
          jComboBoxStatus.addItem((String)row.elementAt(1));   
        }
        getRootPane().setDefaultButton(jButtonOk);
                       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelButtons = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOk = new javax.swing.JButton();
        jPanelFields = new javax.swing.JPanel();
        jLabelStatus = new javax.swing.JLabel();
        jLabelWert = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox();
        jTextFieldWert = new javax.swing.JTextField();
        jTextFieldVon = new javax.swing.JTextField();
        jLabelVon = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonCancel);

        jButtonOk.setText("Ok");
        jButtonOk.setContentAreaFilled(false);
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jPanelButtons.add(jButtonOk);

        getContentPane().add(jPanelButtons, java.awt.BorderLayout.SOUTH);

        jPanelFields.setLayout(new java.awt.GridBagLayout());

        jLabelStatus.setText("Status:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelFields.add(jLabelStatus, gridBagConstraints);

        jLabelWert.setText("Wert:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelFields.add(jLabelWert, gridBagConstraints);

        jComboBoxStatus.setMinimumSize(new java.awt.Dimension(100, 19));
        jComboBoxStatus.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        jPanelFields.add(jComboBoxStatus, gridBagConstraints);

        jTextFieldWert.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldWert.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        jPanelFields.add(jTextFieldWert, gridBagConstraints);

        jTextFieldVon.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldVon.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 5);
        jPanelFields.add(jTextFieldVon, gridBagConstraints);

        jLabelVon.setText("Von:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelFields.add(jLabelVon, gridBagConstraints);

        getContentPane().add(jPanelFields, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        okPressed = false;
        hide();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed

        if (okPressed = validateForm()) hide();
        
    }//GEN-LAST:event_jButtonOkActionPerformed
    
    public void initForm(){
        setStatus(new Integer(0));
        setWert(null);
        setOkPressed(false);
        setManyValues(false);
        setVon(new java.util.Date());
    }
    
    public void setManyValues(boolean enabled){
        this.many = enabled;
        jTextFieldVon.setEnabled(!enabled);
        jTextFieldWert.setEnabled(!enabled);
        if (enabled) {
            jTextFieldVon.setText("<Different Values>");
            jTextFieldWert.setText("<Different Values>");
        }
    }
    
        
    private boolean validateForm(){
        try {
        if (!many){
            von = DateFormat.defaultDateFormat.parse(jTextFieldVon.getText()); 
            if (jTextFieldWert.getText().length() == 0) {
                wert = null;
            } else {
                wert = new Double(jTextFieldWert.getText());
            }
            
        }
        
        status = (Integer)idIndex.get(jComboBoxStatus.getSelectedIndex());
        } catch (java.lang.Exception e) {
            MsgBox.error(e.getMessage());
            return false;
        }
        return true;
    }
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
      /**
     * Getter for property okPressed.
     * @return Value of property okPressed.
     */
    public boolean isOkPressed() {
        return okPressed;
    }    
    
    /**
     * Setter for property okPressed.
     * @param okPressed New value of property okPressed.
     */
    public void setOkPressed(boolean okPressed) {
        this.okPressed = okPressed;
    }
    
    public void setVon(java.util.Date von){
        this.jTextFieldVon.setText(DateFormat.defaultDateFormat.format(von));
        this.von = von;
 
    }
    
    public void setStatus(Integer status){
        jComboBoxStatus.setSelectedIndex(idIndex.indexOf(status));
        this.status = status ;
    }
    
    public Integer getStatus(){
        return status;
    }
    
    public java.util.Date getVon(){
        return von;
    }
    
    public void setWert(Double value){        
        jTextFieldWert.setText((value==null)? "":NumericFormat.defaultDecimalFormat.format(value));
        this.wert = value;
    }
    
    public Double getWert(){
        return wert;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JComboBox jComboBoxStatus;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelVon;
    private javax.swing.JLabel jLabelWert;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelFields;
    private javax.swing.JTextField jTextFieldVon;
    private javax.swing.JTextField jTextFieldWert;
    // End of variables declaration//GEN-END:variables
    
}
