/*******************************************************************************
 * Copyright (c) 2011 University of Bayreuth - BayCEER.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v2.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * 
 * Contributors:
 *     University of Bayreuth - BayCEER - initial API and implementation
 ******************************************************************************/
/*
 * JSearchObjektDialog.java
 *
 * Created on 4. Dezember 2003, 11:47
 */

package de.unibayreuth.bayeos.goat.search;

import java.awt.Cursor;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumn;
import javax.swing.text.Document;

import org.apache.log4j.Logger;

import de.unibayreuth.bayceer.bayeos.objekt.ObjektArt;
import de.unibayreuth.bayeos.goat.JMainFrame;
import de.unibayreuth.bayeos.goat.table.ObjektArtTableCellRenderer;

/**
 *
 * @author  oliver
 */
public class JSearchObjektDialog extends javax.swing.JDialog  {
    
    
   private final static Logger logger = Logger.getLogger(JSearchObjektDialog.class.getName());
   
   private boolean changed = false;
   private JMainFrame app;
   private SearchResultModel model;
   private JTable table;
       
   private class DocumentChangeListener implements DocumentListener {
        public void changedUpdate(DocumentEvent e) {
            changed(e.getDocument().getLength());
        }
        public void insertUpdate(DocumentEvent e) {
            changed(e.getDocument().getLength());
        }
        public void removeUpdate(DocumentEvent e) {
            changed(e.getDocument().getLength());
        }
        private void changed(int length){
            jButtonSearch.setEnabled(length > 0);
        }
    }
    
    
    // Return fÃ¼hrt zum Update
    private class CommitActionListener implements ActionListener {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            Document d =  ((JTextField)evt.getSource()).getDocument();
            if (d.getLength() > 0) search();
        }
    }
       
    
    /** Creates new form JSearchObjektDialog */
    public JSearchObjektDialog(JMainFrame app, boolean modal) {
        super(app, modal);
        this.app = app;
        
        initComponents();
        DocumentChangeListener d = new DocumentChangeListener();
        CommitActionListener c = new CommitActionListener();
        jtxtName.getDocument().addDocumentListener(d);
        jtxtName.addActionListener(c);
        
        model = new SearchResultModel(app.getXmlClient());
        table = new JTable(model);
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
               boolean empty = table.getSelectionModel().isSelectionEmpty();
               jButtonExpand.setEnabled(!empty);    
            }
        });
        table.addMouseListener( new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (table.getSelectedRowCount() > 0 && e.getClickCount() == 2)   {
                    jButtonExpandActionPerformed(null);
                }
            }
        });
        getRootPane().setDefaultButton(jButtonSearch);
        setLocationRelativeTo(app);
        setResizable(true);
        pack();
    }

    public void search() {
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            table.clearSelection();
            model.loadData(jtxtName.getText());
            TableColumn col = table.getColumnModel().getColumn(0);
            col.setCellRenderer(new ObjektArtTableCellRenderer(3));
            scrollPaneResults.setViewportView(table);
            changed = false;
            jButtonSearch.setEnabled(false);
        } finally {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }

    
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panelResults = new javax.swing.JPanel();
        scrollPaneResults = new javax.swing.JScrollPane();
        panelButtons = new javax.swing.JPanel();
        jButtonExpand = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        panelSearch = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        jtxtName = new javax.swing.JTextField();

        setTitle("Search ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        panelResults.setLayout(new java.awt.BorderLayout());

        panelResults.setBorder(new javax.swing.border.TitledBorder("Results"));
        panelResults.setMinimumSize(new java.awt.Dimension(300, 150));
        panelResults.setPreferredSize(new java.awt.Dimension(300, 150));
        scrollPaneResults.setBorder(null);
        panelResults.add(scrollPaneResults, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelResults, java.awt.BorderLayout.CENTER);

        panelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButtonExpand.setText("Expand");
        jButtonExpand.setEnabled(false);
        jButtonExpand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExpandActionPerformed(evt);
            }
        });

        panelButtons.add(jButtonExpand);

        jButtonSearch.setText("Search");
        jButtonSearch.setEnabled(false);
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        panelButtons.add(jButtonSearch);

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        panelButtons.add(jButtonClose);

        getContentPane().add(panelButtons, java.awt.BorderLayout.SOUTH);

        panelSearch.setLayout(new java.awt.GridBagLayout());

        panelSearch.setBorder(new javax.swing.border.TitledBorder("Criteria"));
        panelSearch.setMinimumSize(new java.awt.Dimension(200, 200));
        labelName.setText("Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 4);
        panelSearch.add(labelName, gridBagConstraints);

        jtxtName.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
        panelSearch.add(jtxtName, gridBagConstraints);

        getContentPane().add(panelSearch, java.awt.BorderLayout.NORTH);

        pack();
    }//GEN-END:initComponents

    private void jButtonExpandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExpandActionPerformed
       int row = table.getSelectedRow();
       app.getTreePane().expandObjektNode(ObjektArt.get((String)model.getValueAt(row, 3)),(Integer)model.getValueAt(row,1));
    }//GEN-LAST:event_jButtonExpandActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // Add your handling code here:
        search();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        // Add your handling code here:
        hide();
    }//GEN-LAST:event_jButtonCloseActionPerformed

        
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
      
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonExpand;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JTextField jtxtName;
    private javax.swing.JLabel labelName;
    private javax.swing.JPanel panelButtons;
    private javax.swing.JPanel panelResults;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JScrollPane scrollPaneResults;
    // End of variables declaration//GEN-END:variables
    
}
